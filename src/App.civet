"civet jsxCode"

{ createSignal, Switch, Match, onMount, createEffect } from solid-js
{ Circle } from ./Circle.civet
{ Zeller } from ./Zeller.civet
{ modInverse } from ./mod.civet

tabTitles := ['Addition', 'Multiplication', 'Inverses', 'Zeller']
tabTitleToName: (tab: string) => string := .toLowerCase()
tabNames := tabTitles.map tabTitleToName

function hashToTab(): string
  hash := window.location.hash[1..]
  if hash and hash is in tabNames
    hash
  else
    tabTitleToName tabTitles[0] // first tab by default

export function App()
  [activeTab, _setActiveTab] := createSignal hashToTab()
  function setActiveTab(tab: string)
    _setActiveTab tab
    history.replaceState null, '', `#${tab}`

  window.addEventListener 'popstate', =>
    _setActiveTab hashToTab()

  <.tabs>
    for tab of tabTitles
      <button class=
        if activeTab() is tabTitleToName tab then 'active'
      onClick=
        => setActiveTab tabTitleToName tab
      >tab
  <Switch>
    <Match when={activeTab() is 'addition'}>
      <Circle neighbor=
        (i: number, n: number, a: number) => (i + a) % n
      >
    <Match when={activeTab() is 'multiplication'}>
      <Circle neighbor=
        (i: number, n: number, a: number) => (i * a) % n
      >
    <Match when={activeTab() is 'inverses'}>
      <Circle noA symmetric neighbor=
        (i: number, n: number, a: number) => modInverse i, n
      >
    <Match when={activeTab() is 'zeller'}>
      <Zeller>
  <footer>
    <a href="https://github.com/edemaine/modular-demos" target="_blank">
      'Source code on GitHub'
